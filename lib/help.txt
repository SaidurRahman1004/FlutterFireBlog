lib/
тФЬтФАтФА main.dart                 # ржЕрзНржпрж╛ржкрзЗрж░ ржкрзНрж░ржмрзЗрж╢ржжрзНржмрж╛рж░
тФЬтФАтФА core/
тФВ   тФЬтФАтФА constants.dart        # рж░ржЩ, рж╕рзНржЯрзНрж░рж┐ржВ ржЗрждрзНржпрж╛ржжрж┐ ржзрзНрж░рзБржмржХ
тФВ   тФФтФАтФА theme.dart            # ржЕрзНржпрж╛ржкрзЗрж░ ржерж┐ржо
тФЬтФАтФА models/
тФВ   тФФтФАтФА post_model.dart       # ржПржХржЯрж╛ ржкрзЛрж╕рзНржЯ ржХрзЗржоржи рж╣ржмрзЗ, рждрж╛рж░ ржиржХрж╢рж╛
тФЬтФАтФА screens/
тФВ   тФЬтФАтФА home_screen.dart      # рж╣рзЛржо ржкрзЗржЬ, ржпрзЗржЦрж╛ржирзЗ рж╕ржм ржкрзЛрж╕рзНржЯ ржжрзЗржЦрж╛ржмрзЗ
тФВ   тФЬтФАтФА login_screen.dart     # рж▓ржЧржЗржи ржкрзЗржЬ
тФВ   тФЬтФАтФА signup_screen.dart    # рж╕рж╛ржЗржи ржЖржк ржкрзЗржЬ
тФВ   тФФтФАтФА add_edit_post_screen.dart # ржирждрзБржи ржкрзЛрж╕рзНржЯ рж▓рзЗржЦрж╛ ржмрж╛ ржПржбрж┐ржЯ ржХрж░рж╛рж░ ржкрзЗржЬ
тФЬтФАтФА services/
тФВ   тФЬтФАтФА auth_service.dart     # ржЗржЙржЬрж╛рж░ рж▓ржЧржЗржи/рж╕рж╛ржЗржиржЖржк/рж╕рж╛ржЗржиржЖржЙржЯ ржПрж░ ржХрж╛ржЬ
тФВ   тФЬтФАтФА firestore_service.dart # ржкрзЛрж╕рзНржЯ рж░рж┐ржб/рж░рж╛ржЗржЯ/ржЖржкржбрзЗржЯ/ржбрж┐рж▓рж┐ржЯ ржПрж░ ржХрж╛ржЬ
тФВ   тФФтФАтФА storage_service.dart  # ржЫржмрж┐ ржЖржкрж▓рзЛржбрзЗрж░ ржХрж╛ржЬ
тФФтФАтФА widgets/
    тФЬтФАтФА post_card_widget.dart # ржПржХржЯрж╛ ржкрзЛрж╕рзНржЯржХрзЗ ржХрзЗржоржи ржжрзЗржЦрж╛ржмрзЗ, рждрж╛рж░ ржбрж┐ржЬрж╛ржЗржи
    тФФтФАтФА custom_button.dart    # ржпржжрж┐ ржХрж╛рж╕рзНржЯржо ржмрж╛ржЯржи рж▓рж╛ржЧрзЗ (ржРржЪрзНржЫрж┐ржХ)



.............................................................................................................
D:\CodesApplication\Flutter Projects\FlutterFireBlog\lib\screens\post\create_post_screen.dart
ржХрзЛржбрж╕рж╣ ржкрзВрж░рзНржг ржмрзНржпрж╛ржЦрзНржпрж╛ (Comment + ржмрзНржпрж╛ржЦрзНржпрж╛)
import 'package:flutter/material.dart';                       // Flutter UI widget ржЧрзБрж▓рзЛрж░ ржЬржирзНржп ржкрзНрж░рзЯрзЛржЬржирзАрзЯ ржкрзНржпрж╛ржХрзЗржЬ
import 'dart:io';                                             // File рж╕рж╛ржкрзЛрж░рзНржЯ (рж▓рзЛржХрж╛рж▓ ржЗржорзЗржЬ ржлрж╛ржЗрж▓ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЬржирзНржп)
import 'package:cloud_firestore/cloud_firestore.dart';         // Firestore Database ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛рж░ ржЬржирзНржп
import 'package:firebase_auth/firebase_auth.dart';             // User Authentication (user uid/email) ржкрж╛ржУрзЯрж╛рж░ ржЬржирзНржп
import 'package:firebase_storage/firebase_storage.dart';       // Firebase Storage (ржЗржорзЗржЬ ржЖржкрж▓рзЛржб ржХрж░рж╛рж░ ржЬржирзНржп)
import 'package:image_picker/image_picker.dart';               // ржЧрзНржпрж╛рж▓рж╛рж░рж┐/ржХрзНржпрж╛ржорзЗрж░рж╛ ржерзЗржХрзЗ ржЫржмрж┐ ржмрж╛ржЫрж╛ржЗ ржХрж░рж╛рж░ ржЬржирзНржп ржкрзНржпрж╛ржХрзЗржЬ

// ------------------ Stateful Widget рж╢рзБрж░рзБ ------------------
class CratePostScreen extends StatefulWidget {                 // ржПржЗ рж╕рзНржХрзНрж░рж┐ржи ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ ржирждрзБржи ржкрзЛрж╕рзНржЯ рждрзИрж░рж┐ ржХрж░рждрзЗ ржжрзЗрзЯ
  const CratePostScreen({super.key});

  @override
  State<CratePostScreen> createState() => _CratePostScreenState();
}

class _CratePostScreenState extends State<CratePostScreen> {

  final _titleController = TextEditingController();            // рж╢рж┐рж░рзЛржирж╛ржо ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржб ржХржирзНржЯрзНрж░рзЛрж▓ ржХрж░рж╛рж░ ржЬржирзНржп ржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░
  final _ContentController = TextEditingController();          // ржХржиржЯрзЗржирзНржЯ ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржб ржХржирзНржЯрзНрж░рзЛрж▓ ржХрж░рж╛рж░ ржЬржирзНржп ржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░
  File? _image;                                                // ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржирж┐рж░рзНржмрж╛ржЪрж┐ржд ржЗржорзЗржЬ рж╕ржВрж░ржХрзНрж╖ржгрзЗрж░ ржЬржирзНржп ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓
  bool _loading = false;                                       // рж▓рзЛржбрж┐ржВ ржЗржиржбрж┐ржХрзЗржЯрж░ ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп рж╕рзНржЯрзЗржЯ

  // ЁЯУ╕ ржЗржорзЗржЬ ржмрж╛ржЫрж╛ржЗ ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи (Pick Image)
  Future<XFile?> pickeImage() async {
    final pickedImg = await ImagePicker().pickImage(
      source: ImageSource.gallery,                             // ЁЯУБ ржЧрзНржпрж╛рж▓рж╛рж░рж┐ ржерзЗржХрзЗ ржЫржмрж┐ ржмрж╛ржЫрж╛ржЗ ржХрж░рж╛ рж╣ржмрзЗ
      imageQuality: 75,                                        // ржЫржмрж┐рж░ ржХрзЛрзЯрж╛рж▓рж┐ржЯрж┐ рзнрзл% ржХрж░рзЗ рж░рж┐рж╕рж╛ржЗржЬ ржХрж░рж╛
    );
    if (pickedImg != null)
      setState(() {
        _image = File(pickedImg.path);                         // ржирж┐рж░рзНржмрж╛ржЪрж┐ржд ржЫржмрж┐рж░ рж▓рзЛржХрж╛рж▓ ржкрж╛рже рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
      });
  }

  // тШБя╕П Firebase Storage ржП ржЗржорзЗржЬ ржЖржкрж▓рзЛржб + Firestore ржП ржкрзЛрж╕рзНржЯ ржпрзЛржЧ ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
  Future<void> uploadPost() async {
    setState(() {
      _loading = true;                                         // ржкрзЛрж╕рзНржЯ ржХрж░рж╛рж░ рж╕ржорзЯ CircularProgressIndicator ржжрзЗржЦрж╛ржмрзЗ
    });

    final user = FirebaseAuth.instance.currentUser;            // ржмрж░рзНрждржорж╛ржи рж▓ржЧржЗржиржХрзГржд ржЗржЙржЬрж╛рж░рзЗрж░ ржЗржиржлрж░ржорзЗрж╢ржи ржирзЗржУрзЯрж╛ рж╣ржЪрзНржЫрзЗ
    String? imageUrl;                                          // ржЖржкрж▓рзЛржбржХрзГржд ржЗржорзЗржЬрзЗрж░ URL рж░рж╛ржЦрж╛рж░ ржЬржирзНржп ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓

    // ЁЯЦ╝я╕П ржпржжрж┐ ржЗржЙржЬрж╛рж░ ржЗржорзЗржЬ ржмрзЗржЫрзЗ ржирзЗрзЯ
    if (_image != null) {
      final ref = FirebaseStorage.instance.ref().child(        // Storage ржПрж░ ржПржХржЯрж┐ ржлрзЛрж▓рзНржбрж╛рж░ рж░рзЗржлрж╛рж░рзЗржирзНрж╕ рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
          'post_images/${user?.uid}_${DateTime.now().millisecondsSinceEpoch}.jpg');
      await ref.putFile(_image!);                              // ржЗржорзЗржЬ ржлрж╛ржЗрж▓ Firebase Storage ржП ржЖржкрж▓рзЛржб
      imageUrl = await ref.getDownloadURL();                   // ржЖржкрж▓рзЛржб рж╢рзЗрж╖рзЗ ржбрж╛ржЙржирж▓рзЛржб рж▓рж┐ржВржХ ржкрж╛ржУрзЯрж╛ рж╣ржЪрзНржЫрзЗ
    }

    // ЁЯз╛ Firestore ржП ржирждрзБржи ржкрзЛрж╕рзНржЯ ржпрзБржХрзНржд ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
    await FirebaseFirestore.instance.collection("PostcollectionPath").add({
      'title': _titleController.text,                          // ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржЗржиржкрзБржЯржХрзГржд рж╢рж┐рж░рзЛржирж╛ржо
      'content': _ContentController.text,                      // ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржЗржиржкрзБржЯржХрзГржд ржХржиржЯрзЗржирзНржЯ
      'authorId': user?.uid,                                   // рж▓ржЧржЗржиржХрзГржд ржЗржЙржЬрж╛рж░рзЗрж░ UID
      'authorName': user?.email,                               // рж▓ржЧржЗржиржХрзГржд ржЗржЙржЬрж╛рж░рзЗрж░ ржЗржорзЗржЗрж▓
      'timestamp': FieldValue.serverTimestamp(),               // рж╕рж╛рж░рзНржнрж╛рж░ ржЯрж╛ржЗржорж╕рзНржЯрзНржпрж╛ржорзНржк (ржкрзЛрж╕рзНржЯрзЗрж░ рж╕ржорзЯ)
      'imageUrl': imageUrl,                                    // ржЗржорзЗржЬрзЗрж░ Firebase Storage URL
    });

    if (mounted) {                                             // ржЪрзЗржХ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ рж╕рзНржХрзНрж░рж┐ржи ржПржЦржиржУ ржорж╛ржЙржирзНржЯрзЗржб ржХрж┐ржирж╛
      setState(() {
        _loading = false;                                      // рж▓рзЛржбрж┐ржВ ржмржирзНржз
        Navigator.pop(context);                                // ржкрзЛрж╕рзНржЯ рж╕ржорзНржкржирзНржи рж╣рж▓рзЗ ржЖржЧрзЗрж░ рж╕рзНржХрзНрж░рж┐ржирзЗ ржлрж┐рж░рзЗ ржпрж╛ржУрзЯрж╛
      });
    }
  }

  // ЁЯз▒ UI рждрзИрж░рж┐ ржЕржВрж╢
  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(title: const Text("Create Post")),      // рж╕рзНржХрзНрж░рж┐ржирзЗрж░ ржЯржкрзЗ AppBar (ржЯрж╛ржЗржЯрзЗрж▓)
        body: Padding(
          padding: EdgeInsets.all(12),                         // рж╕рзНржХрзНрж░рж┐ржирзЗ ржкрзНржпрж╛ржбрж┐ржВ
          child: Column(children: [
              TextField(controller: _titleController,          // рж╢рж┐рж░рзЛржирж╛ржо ржЗржиржкрзБржЯ
              decoration: const InputDecoration(
                labelText: "Title", border: OutlineInputBorder(),)),
          SizedBox(height: 5,),
          TextField(controller: _ContentController,            // ржХржиржЯрзЗржирзНржЯ ржЗржиржкрзБржЯ
              decoration: const InputDecoration(
                labelText: "Content", border: OutlineInputBorder(),)),
          const SizedBox(height: 10),

          // ЁЯУ╖ ржЗржорзЗржЬ ржжрзЗржЦрж╛ржирзЛ ржмрж╛ ржмрж╛ржЫрж╛ржЗ ржмрж╛ржЯржи
          _image !=null
              ? Image.file(_image!, height: 150,)               // ржЗржЙржЬрж╛рж░ ржЗржорзЗржЬ ржмрзЗржЫрзЗ ржирж┐рж▓рзЗ ржкрзНрж░рж┐ржнрж┐ржЙ ржжрзЗржЦрж╛ржирзЛ рж╣ржЪрзНржЫрзЗ
              : TextButton.icon(
                  onPressed: pickeImage,                       // ржпржжрж┐ ржЗржорзЗржЬ ржирж╛ ржерж╛ржХрзЗ, ржЗржорзЗржЬ ржмрж╛ржЫрж╛ржЗ ржмрж╛ржЯржи ржжрзЗржЦрж╛ржирзЛ рж╣ржЪрзНржЫрзЗ
                  icon: Icon(Icons.image),
                  label: Text("Select Cover Image")),

          SizedBox(height: 20,),

          // ЁЯФБ ржкрзЛрж╕рзНржЯ ржХрж░рж╛рж░ рж╕ржорзЯ рж▓рзЛржбрж┐ржВ ржЗржиржбрж┐ржХрзЗржЯрж░ ржмрж╛ ржкрзЛрж╕рзНржЯ ржмрж╛ржЯржи
          _loading
              ? CircularProgressIndicator()                    // ржпржжрж┐ рж▓рзЛржбрж┐ржВ рж╣рзЯ, ржШрзВрж░рзНржгрж╛рзЯржорж╛ржи рж▓рзЛржбрж╛рж░ ржжрзЗржЦрж╛ржирзЛ рж╣ржЪрзНржЫрзЗ
              : ElevatedButton(
                  onPressed: uploadPost,                       // ржмрж╛ржЯржирзЗ ржЪрж╛ржк ржжрж┐рж▓рзЗ uploadPost() ржХрж▓ рж╣ржмрзЗ
                  child: Text("Post")),
    ]),
    )
    ,
    );
  }
}

ЁЯза ржПржЗ ржХрзЛржбрзЗ ржХрзА ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ тАФ рж╕ржВржХрзНрж╖рж┐ржкрзНржд ржмрж┐рж╢рзНрж▓рзЗрж╖ржг
ржмрж┐рж╖рзЯ	ржмрж░рзНржгржирж╛
ЁЯзй Widget Type	ржПржЯрж┐ ржПржХржЯрж┐ StatefulWidget, ржХрж╛рж░ржг ржЗржорзЗржЬ, рж▓рзЛржбрж┐ржВ, ржЗржиржкрзБржЯ ржЯрзЗржХрзНрж╕ржЯ ржЗрждрзНржпрж╛ржжрж┐ ржкрж░рж┐ржмрж░рзНрждржиржпрзЛржЧрзНржп (mutable)
ЁЯУ╕ ImagePicker	ржЗржЙржЬрж╛рж░ ржлрзЛржирзЗрж░ ржЧрзНржпрж╛рж▓рж╛рж░рж┐ ржерзЗржХрзЗ ржЗржорзЗржЬ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рждрзЗ ржкрж╛рж░рзЗ
тШБя╕П Firebase Storage	ржирж┐рж░рзНржмрж╛ржЪрж┐ржд ржЗржорзЗржЬ Firebase Storage-ржП ржЖржкрж▓рзЛржб рж╣рзЯ
ЁЯФе Firestore Database	ржкрзЛрж╕рзНржЯрзЗрж░ рждржерзНржп (title, content, imageUrl, user info) Firestore-ржП рж╕ржВрж░ржХрзНрж╖ржг рж╣рзЯ
ЁЯФР Firebase Auth	ржХрзЗ ржкрзЛрж╕рзНржЯ ржХрж░рзЗржЫрзЗ рждрж╛ ржЪрж┐рж╣рзНржирж┐ржд ржХрж░рждрзЗ ржЗржЙржЬрж╛рж░рзЗрж░ UID ржУ email ржирзЗржУрзЯрж╛ рж╣рзЯ
ЁЯМА Loading State	ржкрзЛрж╕рзНржЯ ржХрж░рж╛рж░ рж╕ржорзЯ CircularProgressIndicator ржжрзЗржЦрж╛ржирзЛ рж╣рзЯ
ЁЯФЩ Navigation	рж╕ржлрж▓ржнрж╛ржмрзЗ ржкрзЛрж╕рзНржЯ рж╣рж▓рзЗ ржЖржЧрзЗрж░ рж╕рзНржХрзНрж░рж┐ржирзЗ ржлрж┐рж░рзЗ ржпрж╛рзЯ
ЁЯз▒ UI ржЕржВрж╢	ржЯрзЗржХрзНрж╕ржЯ ржлрж┐рж▓рзНржб, ржЗржорзЗржЬ рж╕рж┐рж▓рзЗржХрж╢ржи ржмрж╛ржЯржи, ржкрзЛрж╕рзНржЯ ржмрж╛ржЯржи тАФ рж╕ржм ржорж┐рж▓рж┐рзЯрзЗ ржПржХржЯрж┐ рж╕рж╣ржЬ ржкрзЛрж╕рзНржЯ ржХрзНрж░рж┐рзЯрзЗржЯ рж╕рзНржХрзНрж░рж┐ржи рждрзИрж░рж┐ рж╣рзЯрзЗржЫрзЗ
ЁЯТб ржПржЗ ржХрзЛржб ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржлрж▓рзЗ ржпрж╛ ржШржЯржмрзЗ

тЬЕ ржЗржЙржЬрж╛рж░ ржирж┐ржЬрзЗрж░ ржЯрж╛ржЗржЯрзЗрж▓ ржУ ржХржиржЯрзЗржирзНржЯ рж▓рж┐ржЦрзЗ ржЗржорзЗржЬрж╕рж╣ ржПржХржЯрж┐ Post ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗред

тЬЕ ржЗржорзЗржЬ Firebase Storage-ржП ржЖржкрж▓рзЛржб рж╣ржмрзЗред

тЬЕ ржЯрзЗржХрзНрж╕ржЯ ржбрзЗржЯрж╛ (title, content, author info) Firestore-ржП рж╕рзЗржн рж╣ржмрзЗред

тЬЕ тАЬPostтАЭ ржмрж╛ржЯржи ржЪрж╛ржкрж▓рзЗ ржПржХржЯрж┐ CircularProgressIndicator ржжрзЗржЦрж╛ ржпрж╛ржмрзЗ ржпрждржХрзНрж╖ржг ржирж╛ ржкрзЛрж╕рзНржЯ рж╕ржорзНржкржирзНржи рж╣рзЯред

тЬЕ ржкрзЛрж╕рзНржЯ рждрзИрж░рж┐ рж╣рзЯрзЗ ржЧрзЗрж▓рзЗ рж╕рзНржХрзНрж░рж┐ржиржЯрж┐ Navigator.pop(context) ржжрж┐рзЯрзЗ ржЖржЧрзЗрж░ рж╕рзНржХрзНрж░рж┐ржирзЗ ржлрж┐рж░рзЗ ржпрж╛ржмрзЗред

flutterfire_blog/
тФВ
тФЬтФА android/
тФЬтФА ios/
тФЬтФА web/ (optional)
тФЬтФА lib/
тФВ  тФЬтФА main.dart
тФВ  тФЬтФА app.dart
тФВ  тФЬтФА models/
тФВ  тФВ   тФФтФА post.dart
тФВ  тФЬтФА services/
тФВ  тФВ   тФЬтФА auth_service.dart
тФВ  тФВ   тФЬтФА firestore_service.dart
тФВ  тФВ   тФФтФА storage_service.dart
тФВ  тФЬтФА providers/
тФВ  тФВ   тФФтФА auth_provider.dart
тФВ  тФЬтФА screens/
тФВ  тФВ   тФЬтФА auth/
тФВ  тФВ   тФВ   тФЬтФА login_screen.dart
тФВ  тФВ   тФВ   тФФтФА signup_screen.dart
тФВ  тФВ   тФЬтФА home_screen.dart
тФВ  тФВ   тФЬтФА create_edit_post_screen.dart
тФВ  тФВ   тФФтФА post_detail_screen.dart
тФВ  тФЬтФА widgets/
тФВ  тФВ   тФЬтФА post_card.dart
тФВ  тФВ   тФФтФА common_widgets.dart
тФВ  тФФтФА utils/
тФВ      тФФтФА validators.dart
тФВ
тФЬтФА pubspec.yaml
тФФтФА README.md
............................................................................
lib/
тФЬтФАтФА main.dart             # ржЕрзНржпрж╛ржкрзЗрж░ ржПржирзНржЯрзНрж░рж┐ ржкрзЯрзЗржирзНржЯ
|
тФЬтФАтФА screens/              # ржкрзНрж░рждрж┐ржЯрж┐ ржкрзЗржЬ ржмрж╛ рж╕рзНржХрзНрж░рж┐ржирзЗрж░ ржЬржирзНржп ржЖрж▓рж╛ржжрж╛ ржлрж╛ржЗрж▓ ржерж╛ржХржмрзЗ
тФВ   тФЬтФАтФА home_screen.dart      # рж▓ржЧржЗржи ржХрж░рж╛рж░ ржкрж░ ржмрзНрж▓ржЧ ржлрж┐ржб ржжрзЗржЦрж╛ржмрзЗ
тФВ   тФЬтФАтФА login_screen.dart     # рж▓ржЧржЗржи ржкрзЗржЬ
тФВ   тФЬтФАтФА signup_screen.dart    # рж╕рж╛ржЗржи-ржЖржк ржкрзЗржЬ
тФВ   тФФтФАтФА create_post_screen.dart # ржирждрзБржи ржкрзЛрж╕рзНржЯ рждрзИрж░рж┐рж░ ржкрзЗржЬ
|
тФЬтФАтФА services/             # ржлрж╛рзЯрж╛рж░ржмрзЗрж╕ ржмрж╛ ржЕржирзНржп ржмрзНржпрж╛ржХржПржирзНржб рж╕ржорзНржкрж░рзНржХрж┐ржд ржХрж╛ржЬ ржХрж░рж╛рж░ ржЬржирзНржп
тФВ   тФЬтФАтФА auth_service.dart     # ржЕржерзЗржиржЯрж┐ржХрзЗрж╢ржи (рж▓ржЧржЗржи, рж╕рж╛ржЗржи-ржЖржк, рж▓ржЧ-ржЖржЙржЯ) рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░ржмрзЗ
тФВ   тФФтФАтФА firestore_service.dart # Firestore ржбрзЗржЯрж╛ржмрзЗрж╕ (CRUD) рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░ржмрзЗ
|
тФЬтФАтФА widgets/              # ржкрзБржирж░рж╛рзЯ ржмрзНржпржмрж╣рж╛рж░ржпрзЛржЧрзНржп UI ржХржорзНржкрзЛржирзЗржирзНржЯ
тФВ   тФФтФАтФА blog_post_card.dart   # рж╣рзЛржо рж╕рзНржХрзНрж░рж┐ржирзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржмрзНрж▓ржЧ ржкрзЛрж╕рзНржЯ ржжрзЗржЦрж╛ржирзЛрж░ ржХрж╛рж░рзНржб
|
тФФтФАтФА models/               # ржбрзЗржЯрж╛ ржоржбрзЗрж▓ ржХрзНрж▓рж╛рж╕
    тФФтФАтФА post_model.dart       # ржмрзНрж▓ржЧ ржкрзЛрж╕рзНржЯрзЗрж░ ржбрзЗржЯрж╛ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░ ржХрзЗржоржи рж╣ржмрзЗ рждрж╛ ржбрж┐ржлрж╛ржЗржи ржХрж░ржмрзЗ


    /////////////////////////////////////////////////////


    ржЕржерзЗржиржЯрж┐ржХрзЗрж╢ржи (Authentication)
    ржПржЗ ржзрж╛ржкржХрзЗ ржЖржорж░рж╛ ржХрзЯрзЗржХржЯрж┐ ржЕржВрж╢рзЗ ржнрж╛ржЧ ржХрж░ржм:

    ржЕржВрж╢ ржХ: AuthService рждрзИрж░рж┐ ржХрж░рж╛: Firebase Authentication-ржПрж░ рж╕ржм рж▓ржЬрж┐ржХ (рж╕рж╛ржЗржи-ржЖржк, рж▓ржЧржЗржи, рж▓ржЧ-ржЖржЙржЯ) ржЧрзБржЫрж┐рзЯрзЗ рж░рж╛ржЦрж╛рж░ ржЬржирзНржп ржПржХржЯрж┐ рж╕рж╛рж░рзНржнрж┐рж╕ ржХрзНрж▓рж╛рж╕ рждрзИрж░рж┐ ржХрж░рж╛ред

    ржЕржВрж╢ ржЦ: UI рждрзИрж░рж┐ (рж▓ржЧржЗржи ржУ рж╕рж╛ржЗржи-ржЖржк): рж▓ржЧржЗржи ржПржмржВ рж╕рж╛ржЗржи-ржЖржк рж╕рзНржХрзНрж░рж┐ржирзЗрж░ ржЬржирзНржп UI ржбрж┐ржЬрж╛ржЗржи (ржкрзНрж░рзЛржЯрзЛржЯрж╛ржЗржк) ржУ ржЙржЗржЬрзЗржЯ ржЯрзНрж░рж┐ред

    ржЕржВрж╢ ржЧ: AuthGate рждрзИрж░рж┐: ржЕрзНржпрж╛ржкржЯрж┐ ржЦрзЛрж▓рж╛рж░ рж╕рж╛ржерзЗ рж╕рж╛ржерзЗ ржЪрзЗржХ ржХрж░рж╛ ржпрзЗ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА рж▓ржЧржЗржи ржХрж░рж╛ ржЖржЫрзЗржи ржХрж┐ ржирж╛ред рж▓ржЧржЗржи ржХрж░рж╛ ржерж╛ржХрж▓рзЗ рж╣рзЛржо рж╕рзНржХрзНрж░рж┐ржирзЗ ржкрж╛ржарж╛ржирзЛ, ржирж╛ ржерж╛ржХрж▓рзЗ рж▓ржЧржЗржи рж╕рзНржХрзНрж░рж┐ржирзЗ ржкрж╛ржарж╛ржирзЛред
    ///////////////////////////////////////////

////////////////////////D:\CodesApplication\Flutter Projects\FlutterFireBlog\lib\services\auth_service.dart////////////////////////
FirebaseAuth.instance: ржПржЯрж┐ ржжрж┐рзЯрзЗ ржЖржорж░рж╛ Firebase Auth рж╕рж╛рж░рзНржнрж┐рж╕ржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рж┐ред

authStateChanges: ржПржЯрж┐ ржПржХржЯрж┐ Streamред ржПржЯрж┐ рж╕ржмрж╕ржорзЯ ржжрзЗржЦрждрзЗ ржерж╛ржХрзЗ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА рж▓ржЧржЗржи ржХрж░рж▓, ржирж╛ржХрж┐ рж▓ржЧ-ржЖржЙржЯ ржХрж░рж▓ред ржПржЗ Stream-ржПрж░ ржУржкрж░ ржнрж┐рждрзНрждрж┐ ржХрж░рзЗржЗ ржЖржорж░рж╛ рж╕рзНржХрзНрж░рж┐ржи ржкрж░рж┐ржмрж░рзНрждржи ржХрж░ржмред

signUpWithEmailPassword: ржПржЗ ржлрж╛ржВрж╢ржиржЯрж┐ рзйржЯрж┐ ржЬрж┐ржирж┐рж╕ ржирзЗрзЯ: ржирж╛ржо, ржЗржорзЗржЗрж▓, ржкрж╛рж╕ржУрзЯрж╛рж░рзНржбред ржкрзНрж░ржержорзЗ createUserWithEmailAndPassword ржжрж┐рзЯрзЗ ржЗржЙржЬрж╛рж░ рждрзИрж░рж┐ ржХрж░рзЗ, рждрж╛рж░ржкрж░ updateDisplayName ржжрж┐рзЯрзЗ ржЗржЙржЬрж╛рж░рзЗрж░ ржирж╛ржоржЯрж┐ рждрж╛рж░ ржкрзНрж░рзЛржлрж╛ржЗрж▓рзЗ рж╕рзЗржн ржХрж░рзЗред

signInWithEmailPassword: ржПржЯрж┐ ржЗржорзЗржЗрж▓ ржУ ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб ржжрж┐рзЯрзЗ рж▓ржЧржЗржи ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред

signOut: ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ рж▓ржЧ-ржЖржЙржЯ ржХрж░рзЗ ржжрзЗрзЯред

currentUser: ржмрж░рзНрждржорж╛ржирзЗ ржХрзЛржи ржЗржЙржЬрж╛рж░ рж▓ржЧржЗржи ржХрж░рж╛ ржЖржЫрзЗ рждрж╛рж░ рждржерзНржп ржжрзЗрзЯред
....................................................D:\CodesApplication\Flutter Projects\FlutterFireBlog\lib\screens\auth_gate.dart...
AuthGate ржХрзА?AuthGate ржмрж╛ Authentication Gate (ржЕржирзЗржХ рж╕ржорзЯ AuthWrapper ржмрж╛ DecisionTree ржирж╛ржорзЗржУ ржкрж░рж┐ржЪрж┐ржд) рж╣рж▓рзЛ ржПржХржЯрж┐ ржмрж┐рж╢рзЗрж╖ ржЙржЗржЬрзЗржЯ, ржпрж╛ ржЕрзНржпрж╛ржк ржЪрж╛рж▓рзБ рж╣ржУрзЯрж╛рж░ ржкрж░ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржЕржерзЗржиржЯрж┐ржХрзЗрж╢ржи рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕ (authentication status) ржЪрзЗржХ ржХрж░рзЗред рж╕рж╣ржЬ ржХржерж╛рзЯ, ржПржЯрж┐ рж╕рж┐ржжрзНржзрж╛ржирзНржд ржирзЗрзЯ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ ржХрзЛржи рж╕рзНржХрзНрж░рж┐ржи ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗредржПрж░ ржорзВрж▓ ржХрж╛ржЬ рж╣рж▓рзЛ:тАвржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржХрж┐ рж▓ржЧржЗржи ржХрж░рж╛ ржЕржмрж╕рзНржерж╛рзЯ ржЖржЫрзЗржи? (Is the user logged in?)тАвржирж╛ржХрж┐ рж▓ржЧржЗржи ржХрж░рж╛ ржирзЗржЗ? (Is the user logged out?)ржПржЗ ржжрзБржЯрж┐ ржЕржмрж╕рзНржерж╛рж░ ржЙржкрж░ ржнрж┐рждрзНрждрж┐ ржХрж░рзЗ ржПржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ рж╕ржарж┐ржХ рж╕рзНржХрзНрж░рж┐ржирзЗ ржкрж╛ржарж╛рзЯред
ржпржжрж┐ рж▓ржЧржЗржи ржХрж░рж╛ ржерж╛ржХрзЗ, рждрж╛ржХрзЗ HomeScreen (ржпрж╛ ржЖржорж░рж╛ ржкрж░рзЗрж░ ржзрж╛ржкрзЗ ржмрж╛ржирж╛ржм) ржжрзЗржЦрж╛ржмрзЗред

ржпржжрж┐ рж▓ржЧржЗржи ржХрж░рж╛ ржирж╛ ржерж╛ржХрзЗ, рждрж╛ржХрзЗ LoginOrSignupScreen ржжрзЗржЦрж╛ржмрзЗред

AuthGate ржПржХржЯрж┐ StreamBuilder ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗред ржПржЯрж┐ AuthService-ржПрж░ authStateChanges ржирж╛ржоржХ рж╕рзНржЯрзНрж░рж┐ржоржХрзЗ рж╢рзЛржирзЗред

snapshot.hasData true рж╣ржУрзЯрж╛рж░ ржорж╛ржирзЗ рж╣рж▓рзЛ User ржЕржмржЬрзЗржХрзНржЯ ржкрж╛ржУрзЯрж╛ ржЧрзЗржЫрзЗ, ржЕрж░рзНржерж╛рзО ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА рж▓ржЧржЗржи ржХрж░рж╛ ржЖржЫрзЗржиред рждржЦржи рждрж╛ржХрзЗ ржбрзЗржорзЛ HomeScreen ржжрзЗржЦрж╛ржирзЛ рж╣ржЪрзНржЫрзЗред

snapshot.hasData false рж╣ржУрзЯрж╛рж░ ржорж╛ржирзЗ рж╣рж▓рзЛ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА рж▓ржЧржЗржи ржХрж░рж╛ ржирзЗржЗред рждржЦржи рждрж╛ржХрзЗ LoginOrSignupScreen ржжрзЗржЦрж╛ржирзЛ рж╣ржЪрзНржЫрзЗред

LoginOrSignupScreen ржПржХржЯрж┐ рж╕рзНржЯрзЗржЯржлрзБрж▓ ржЙржЗржЬрзЗржЯ ржпрж╛ showLoginPage ржирж╛ржорзЗ ржПржХржЯрж┐ bool ржнрзЗрж░рж┐рзЯрзЗржмрж▓ ржжрж┐рзЯрзЗ ржарж┐ржХ ржХрж░рзЗ ржХрзЛржиржЯрж┐ ржжрзЗржЦрж╛ржмрзЗред togglePages ржлрж╛ржВрж╢ржиржЯрж┐ ржХрж▓ ржХрж░рзЗ ржПржЗ bool-ржПрж░ ржорж╛ржи ржЙрж▓рзНржЯрзЗ ржжрзЗржУрзЯрж╛ рж╣рзЯред


LoginScreen-ржП onTapToSignUp ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░рзЗрж░ ржорж╛ржзрзНржпржорзЗ togglePages ржлрж╛ржВрж╢ржиржЯрж┐ ржкрж╛рж╕ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред

SignUpScreen-ржП onTapToLogin ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░рзЗрж░ ржорж╛ржзрзНржпржорзЗ togglePages ржлрж╛ржВрж╢ржиржЯрж┐ ржкрж╛рж╕ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред

ржПржЗ ржХрзМрж╢рж▓ржЯрж┐рж░ ржорж╛ржзрзНржпржорзЗ, ржЪрж╛ржЗрж▓рзНржб ржЙржЗржЬрзЗржЯрзЗ (Login/Signup Screen) ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ рж╣рж▓рзЗ ржкрзЗрж░рзЗржирзНржЯ ржЙржЗржЬрзЗржЯрзЗрж░ (LoginOrSignupScreen) showLoginPage рж╕рзНржЯрзЗржЯ ржкрж░рж┐ржмрж░рзНрждржи рж╣рзЯ ржПржмржВ UI рж╕ржлрж▓ржнрж╛ржмрзЗ ржЯржЧрж▓ ржХрж░рзЗред
///////////////////////////////D:\CodesApplication\Flutter Projects\FlutterFireBlog\lib\models\post_model.dart/////////////////////////////////////////////////
Post ржХрзНрж▓рж╛рж╕ржЯрж┐ ржЖржорж╛ржжрзЗрж░ ржбрзЗржЯрж╛ ржоржбрзЗрж▓ред

toMap(): ржПржЗ ржорзЗржержбржЯрж┐ ржЖржорж╛ржжрзЗрж░ Post ржЕржмржЬрзЗржХрзНржЯржХрзЗ ржПржХржЯрж┐ Map-ржП ржкрж░рж┐ржгржд ржХрж░рзЗ, ржпрж╛ Firestore рж╕рж╣ржЬрзЗржЗ ржмрзБржЭрждрзЗ ржкрж╛рж░рзЗ ржПржмржВ рж╕рзЗржн ржХрж░рждрзЗ ржкрж╛рж░рзЗред

fromMap(): ржПржЯрж┐ ржПржХржЯрж┐ factory constructorред ржпржЦржи ржЖржорж░рж╛ Firestore ржерзЗржХрзЗ ржбрзЗржЯрж╛ ржкрзЬржм, рждржЦржи ржбрзЗржЯрж╛ Map рж╣рж┐рж╕рзЗржмрзЗ ржЖрж╕ржмрзЗред ржПржЗ ржорзЗржержбржЯрж┐ рж╕рзЗржЗ Map-ржХрзЗ ржПржХржЯрж┐ Post ржЕржмржЬрзЗржХрзНржЯрзЗ ржкрж░рж┐ржгржд ржХрж░ржмрзЗред
.................................................................
//////////////////////////////////D:\CodesApplication\Flutter Projects\FlutterFireBlog\lib\services\firestore_service.dart//////////////
FirebaseFirestore.instance.collection('posts'): ржПржЯрж┐ ржЖржорж╛ржжрзЗрж░ ржмрж▓рзЗ ржжрзЗрзЯ ржпрзЗ ржЖржорж░рж╛ Firestore-ржПрж░ ржнрзЗрждрж░рзЗрж░ 'posts' ржирж╛ржорзЗрж░ ржХрж╛рж▓рзЗржХрж╢ржиржЯрж┐рж░ рж╕рж╛ржерзЗ ржХрж╛ржЬ ржХрж░рждрзЗ ржЪрж╛ржЗред

createPost ржлрж╛ржВрж╢ржи:

ржПржЯрж┐ ржПржХржЯрж┐ title, content ржПржмржВ ржРржЪрзНржЫрж┐ржХ imageUrl ржирзЗрзЯред

AuthService ржерзЗржХрзЗ currentUser-ржПрж░ рждржерзНржп (ржмрж┐рж╢рзЗрж╖ ржХрж░рзЗ uid ржПржмржВ displayName) ржирзЗрзЯред

ржПржХржЯрж┐ ржирждрзБржи Post ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐ ржХрж░рзЗред

posts.add(newPost.toMap()) ржХржорж╛ржирзНржбрзЗрж░ ржорж╛ржзрзНржпржорзЗ рж╕рзЗржЗ ржЕржмржЬрзЗржХрзНржЯржХрзЗ Map-ржП рж░рзВржкрж╛ржирзНрждрж░ ржХрж░рзЗ Firestore-ржП рж╕рзЗржн ржХрж░рзЗ ржжрзЗрзЯред
............................................................

AuthGate-ржПрж░ ржнрзЗрждрж░рзЗ LoginOrSignupScreen ржерж╛ржХрзЗред рждрж╛рж░ ржХрж╛ржЬ рж╣рж▓рзЛ рж▓ржЧржЗржи ржПржмржВ рж╕рж╛ржЗржи-ржЖржк рж╕рзНржХрзНрж░рж┐ржирзЗрж░ ржоржзрзНржпрзЗ ржЯржЧрж▓ ржХрж░рж╛ред рж╕рзНржХрзНрж░рж┐ржирзЗрж░ ржнрзЗрждрж░рзЗрж░ ржмрж╛ржЯржи (ржпрзЗржоржи: "Sign Up" ржмрж╛ржЯржи) ржХрзНрж▓рж┐ржХ рж╣рж▓рзЗ ржПржЦржи ржЖрж░ рж╕рзЗ рж╕рж░рж╛рж╕рж░рж┐ Navigator.push ржХрж░ржмрзЗ ржирж╛ред ржмрж░ржВ, AuthGate ржерзЗржХрзЗ ржкрж╛рж╕ ржХрж░рж╛ togglePages ржлрж╛ржВрж╢ржиржЯрж┐ржХрзЗ ржХрж▓ ржХрж░ржмрзЗред

...............................................................................
main.dart (рж╢рзБрж░рзБ)ржкрзНрж░ржЬрзЗржХрзНржЯржЯрж┐ MyApp-ржП рж╢рзБрж░рзБ рж╣рзЯ, ржПржмржВ home рж╣рж┐рж╕рзЗржмрзЗ AuthGate() рж╕рзЗржЯ ржХрж░рж╛ ржерж╛ржХрзЗредрзи. AuthGate (ржкрзНрж░ржмрзЗрж╢ржжрзНржмрж╛рж░)AuthGate ржПржХржЯрж┐ рж░рж┐ржпрж╝рзЗрж▓-ржЯрж╛ржЗржо рж╕рзНржЯрзНрж░рзАржо (AuthService().authStateChanges) ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЗржЙржЬрж╛рж░ рж▓ржЧржЗржи ржЖржЫрзЗ ржХрж┐ ржирзЗржЗ рждрж╛ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рзЗредржЕржмрж╕рзНржерж╛StreamBuilder ржПрж░ рж░рзЗржЬрж╛рж▓рзНржЯржжрзЗржЦрж╛ржирзЛ рж╕рзНржХрзНрж░рж┐ржирж▓ржЧржЗржи ржирзЗржЗsnap.hasData = falseLoginOrSignupScreen()рж▓ржЧржЗржи ржЖржЫрзЗsnap.hasData = true (User ржЕржмржЬрзЗржХрзНржЯ)HomeScreen()рзй. LoginOrSignupScreen (ржЯржЧрж▓рж╛рж░)ржпрзЗрж╣рзЗрждрзБ рж╢рзБрж░рзБрждрзЗ рж▓ржЧржЗржи ржирзЗржЗ, рждрж╛ржЗ AuthGate ржжрзЗржЦрж╛рзЯ LoginOrSignupScreen()ред ржПржЗ рж╕рзНржХрзНрж░рж┐ржиржЯрж┐ рж╣рж▓ рж╕рзНржЯрзЗржЯ ржорзНржпрж╛ржирзЗржЬрж╛рж░ред ржПрж░ ржХрж╛ржЬ рж╣рж▓рзЛ:рж╕рзНржЯрзЗржЯ (showLoginPage) ржЕржирзБржпрж╛рзЯрзА ржПржХржмрж╛рж░ LoginScreen ржПржмржВ ржПржХржмрж╛рж░ SignUpScreen рж▓рзЛржб ржХрж░рж╛редрж╕рзНржХрзНрж░рж┐ржи ржжрзБржЯрж┐рждрзЗ ржЯржЧрж▓ ржХрж░рж╛рж░ ржЬржирзНржп togglePages() ржлрж╛ржВрж╢ржиржЯрж┐ ржкрж╛рж╕ ржХрж░рж╛редрзк. LoginScreen ржмрж╛ SignUpScreen (ржЕрзНржпрж╛ржХрж╢ржи)ржЗржЙржЬрж╛рж░ ржпржЦржи LoginScreen-ржП рждрж╛рж░ ржХрзНрж░рзЗржбрзЗржирж╢рж┐ржпрж╝рж╛рж▓ ржжрж┐рзЯрзЗ "Log In" ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзЗ, рждржЦржи:_loginUser() ржлрж╛ржВрж╢ржиржЯрж┐ ржЪрж▓рзЗредAuthService().signInWithEP(...) ржХрж▓ рж╣рзЯредFirebase ржПржЗ ржЗржЙржЬрж╛рж░ржХрзЗ рж▓ржЧржЗржи ржХрж░рж╛рзЯредрзл. ржлрж┐рж░рзЗ ржпрж╛ржУрзЯрж╛ AuthGate-ржП (рж░рж┐ржпрж╝рзЗрж▓-ржЯрж╛ржЗржо рж░рж┐ржЕрзНржпрж╛ржХрж╢ржи)рж▓ржЧржЗржи рж╕ржлрж▓ рж╣ржУржпрж╝рж╛рж░ рж╕рж╛ржерзЗ рж╕рж╛ржерзЗржЗ:AuthService().authStateChanges рж╕рзНржЯрзНрж░рзАржоржЯрж┐ ржПржХржЯрж┐ ржирждрзБржи ржЗржнрзЗржирзНржЯ (User ржЕржмржЬрзЗржХрзНржЯ) ржЗржорж┐ржЯ ржХрж░рзЗредAuthGate-ржПрж░ StreamBuilder рж░рж┐ржпрж╝рзЗрж▓-ржЯрж╛ржЗржорзЗ рждрж╛ ржзрж░рзЗ ржлрзЗрж▓рзЗредAuthGate рж░рж┐ржмрж┐рж▓рзНржб рж╣рзЯ ржПржмржВ ржжрзЗржЦрждрзЗ ржкрж╛рзЯ ржПржЦржи snap.hasData = trueредржлрж▓рзЗ, AuthGate ржжрзНрж░рзБржд LoginOrSignupScreen() ржХрзЗ рж╕рж░рж┐ржпрж╝рзЗ ржжрж┐рзЯрзЗ HomeScreen() рж▓рзЛржб ржХрж░рзЗ ржжрзЗрзЯредржПржЗржнрж╛ржмрзЗ, рж▓ржЧржЗржи/рж╕рж╛ржЗржи-ржЖржк рж╕рзНржХрзНрж░рж┐ржи ржжрзБржЯрж┐ рж╕рж░рж╛рж╕рж░рж┐ HomeScreen-ржП ржирзЗржнрж┐ржЧрзЗржЯ ржирж╛ ржХрж░рзЗржУ, AuthGate-ржПрж░ ржорж╛ржзрзНржпржорзЗ ржкрзБрж░рзЛ ржЕрзНржпрж╛ржкрзНрж▓рж┐ржХрзЗрж╢ржирзЗрж░ ржлрзНрж▓рзЛ ржирж┐ржпрж╝ржирзНрждрзНрж░рж┐ржд рж╣рзЯредржЖржкржирж┐ ржПржЦржи ржПржЗ рж▓ржЬрж┐ржХржЯрж┐ ржмрзБржЭрждрзЗ ржкрзЗрж░рзЗржЫрзЗржиред ржПржЯрж┐ржЗ Flutter-ржП Authentication ржлрзНрж▓рзЛ рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░рж╛рж░ рж╕ржмржЪрзЗрзЯрзЗ ржкрж░рж┐рж╖рзНржХрж╛рж░ ржУ ржЖржзрзБржирж┐ржХ ржЙржкрж╛рзЯред ржЖржкржирж┐ ржПржЦржи ржзрж╛ржк рзк ржП ржпрзЗрждрзЗ ржкрж╛рж░рзЗржиред
